image: ${CI_REGISTRY}/ston-fi/docker/rust-build:20.10.24_1.79.0-bb606509

# Prevent duplicate pipelines, branch pipeline and merge_request pipeline
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH || $CI_COMMIT_TAG'

stages:
  - test

variables:
  FF_USE_FASTZIP: 1
  CACHE_COMPRESSION_LEVEL: "fastest"
  CARGO_HOME: "${CI_PROJECT_DIR}/.cargo"
  RUSTFLAGS: "-D warnings -C target-cpu=znver2"
  TARGET_CPU_MARCH: "znver2"


.snippets:
  get-cache:
    - |
      if [ "$CI_COMMIT_REF_NAME" != "$CI_DEFAULT_BRANCH" ]; then
        export CACHE_FALLBACK_KEY="cache-$CI_DEFAULT_BRANCH-$CI_RUNNER_ID-non-protected";
      else
        export CACHE_FALLBACK_KEY="cache-main-$CI_RUNNER_ID-protected";
      fi
      echo "Using cache key: cache-$CI_COMMIT_REF_SLUG"
      echo "Fallback cache key: $CACHE_FALLBACK_KEY"

cache:
  key: shared-cache
  paths:
    - target/
    - .cargo/
  

test:
  stage: test
  before_script:
    - !reference [.snippets, get-cache]  
  script:
    - cargo fmt --check
    - cargo clippy --release   
    - cargo clippy --features "state_cache" --release
    - cargo clippy --features "emulate_get_method" --release
 
    - cargo build --release
    - cargo build --release --features "state_cache"
    - cargo build --release --features "emulate_get_method"
    - cargo test --package tonlib-core
    - cargo test --lib
    - cargo test --lib --features "state_cache"
    - cargo test --lib --features "emulate_get_method"
  tags:
    - zen4
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != 'merge_request_event'

integration_test:
  stage: test
  before_script:
    - !reference [.snippets, get-cache]
  script:
    - cargo install cargo-nextest
    - cargo nextest run --release  
    - cargo nextest run --release --features "state_cache"
    - cargo nextest run --release --features "emulate_get_method"
  tags:
    - zen4
  when: manual

test-mr:
  tags:
    - zen4
  stage: test
  before_script:
    - !reference [.snippets, get-cache]
  script:
    - cargo fmt --check
    - cargo clippy --release  
    - cargo clippy --release --features "state_cache"
    - cargo clippy --release --features "emulate_get_method"
    - cargo build --release  
    - cargo build --release --features "state_cache" 
    - cargo build --release --features "emulate_get_method"
    - cargo test --lib --all-features
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

test-master:
  tags:
    - zen4
  stage: test
  script:
    - cargo fmt --check
    - cargo build --all-features -- -D warnings
    - cargo test --lib --all-features
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

